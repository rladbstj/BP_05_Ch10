1. 다음과 같이 하나의 레이블과 2개의 버튼을 가지는 프로그램을 작성해보자. 
from tkinter import Tk, Label, Button
def greet():
 print("파이썬에 오신 것을 환영합니다. ")
window = Tk()
label = Label(window, text="간단한 GUI 프로그램!")
label.pack()
greet_button = Button(window, text="환영합니다.", command=greet)
greet_button.pack()
close_button = Button(window, text="종료", command=window.quit)
close_button.pack()
window.mainloop()

2.  숫자를 입력하고 "더하기" 버튼을 누르면 합계에 더해지고 "빼기" 버튼을 누르면 합계에서 빼지는 계산기를 작성하여 본다.
from tkinter import Tk, Label, Button, Entry, IntVar, END, W, E
def update_add():
 update("add")
def update_subtract():
 update("subtract")
def update_reset():
 update("reset")
window = Tk()
total = 0
sum = Label(window)
sum.grid(row=0, column=1, columnspan=2)
label = Label(window, text="현재 합계:")
label.grid(row=0, column=0)
entry = Entry(window)
entry.grid(row=1, column=0, columnspan=3)
add_button = Button(window, text="더하기(+)", command=update_add)
subtract_button = Button(window, text="빼기(-)", command=update_subtract)
reset_button = Button(window, text="초기화", command=update_reset)
add_button.grid(row=2, column=0)
subtract_button.grid(row=2, column=1)
reset_button.grid(row=2, column=2)
def update(method):
 global total
 if method == "add":
 total += int(entry.get())
 elif method == "subtract":
 total -= int(entry.get())
 else:
 total = 0
 sum['text'] = str(total)
 entry.delete(0, END)
window.mainloop()

3. 우리가 앞에서 텍스트 버전으로 제작하였던 숫자 맞추기 게임을 그래픽 사용자 인터페이스 버전으로 작성해보자.
import random
from tkinter import *
window = Tk()
secret_number = random.randint(1, 100)
guess = None
num_guesses = 0
def guess_number():
 global num_guesses
 guess = int(entry.get())
 num_guesses += 1
 if guess == secret_number:
 message = "축하합니다!!"
 elif guess < secret_number:
 message = "너무 낮아요!!"
 else:
 message = "너무 높아요!!"
 label['text']= message
def reset():
 global num_guesses
 entry.delete(0, END)
 secret_number = random.randint(1, 100)
 guess = 0
 num_guesses = 0
 message = "1부터 100사이의 숫자를 추측하시오"
 label['text']= message
message = "1부터 100사이의 숫자를 추측하시오"
label = Label(window, text=message)
entry = Entry(window)
guess_button = Button(window, text="숫자를 입력", command=guess_number)
reset_button = Button(window, text="게임을 다시 실행", command=reset)
label.grid(row=0, column=0, columnspan=2, sticky=W+E)
entry.grid(row=1, column=0, columnspan=2, sticky=W+E)
guess_button.grid(row=2, column=0)
reset_button.grid(row=2, column=1)
window.mainloop()

4. 인치를 센티미터로 변환하는 다음과 같은 프로그램을 작성해보자.
from tkinter import *
def do_convert():
inch_val = float(cvt_from.get())
centimeters_val = inch_val * 2.54
cvt_to.set('%s 센티미터' % centimeters_val)
root = Tk()
cvt_from = StringVar()
cvt_to = StringVar()
lbl = Label(root, text='인치를 센티미디로 변환하는 프로그램:')
lbl.grid(row=0, column=0, columnspan=2)
from_lbl = Label(root, text='인치를 입력하시오:')
from_lbl.grid(row=1, column=0)
from_entry = Entry(root, textvariable=cvt_from)
from_entry.grid(row=1, column=1)
to_lbl = Label(root, text='변환결과:')
to_lbl.grid(row=2, column=0)
result_lbl = Label(root,
textvariable=cvt_to)
result_lbl.grid(row=2, column=1)
convert_btn = Button(root,
text='변환!', command=do_convert)
convert_btn.grid(row=3, column=1)
root.mainloop()

5. 데이터를 입력받을 때 사용할 수 있는 다음과 같은 애플리케이션을 작성해보자.
from tkinter import *
fields = '이름', '직업', '국적'
def fetch(entries):
 for entry in entries:
 field = entry[0]
 text = entry[1].get()
 print('%s: "%s"' % (field, text))
def makeform(root, fields):
 entries = []
 for field in fields:
 row = Frame(root)
 lab = Label(row, width=15, text=field)
 ent = Entry(row)
 row.pack(side=TOP, fill=X)
 lab.pack(side=LEFT)
 ent.pack(side=RIGHT, expand=YES, fill=X)
 entries.append((field, ent))
 return entries
root = Tk()
ents = makeform(root, fields)
root.bind('<Return>', (lambda event, e=ents: fetch(e)))
b1 = Button(root, text='보여주기',
 command=(lambda e=ents: fetch(e)))
b1.pack(side=LEFT, padx=5, pady=5)
b2 = Button(root, text='종료하기', command=root.quit)
b2.pack(side=LEFT, padx=5, pady=5)
root.mainloop()

6. 가위, 바위, 보 게임을 GUI버전으로 작성해보자. 사용자의 선택은 왼쪽에 이미지에 표시한다. 컴퓨터의 선택은 오른쪾에 이미지에 표시한다. 사용자는 버튼을 눌러서 가위, 바위, 보 중에서 하나를 선택할 수 있다. 사용자의 선택이 끝나면 결과를 화면에 텍스트로 표시한다.
from random import *
from tkinter import *
# 선택 하는 부분
def user_choice_rock():
 user_choice = "rock"
 turn(user_choice)
 user_image.configure(image=rock_image)
def user_choice_paper():
 user_choice = "paper"
 turn(user_choice)
 user_image.configure(image=paper_image)
def user_choice_scissors():
 user_choice = "scissors"
 turn(user_choice)
 user_image.configure(image=scissors_image)
# 게임부분
def turn(user_choice):
 oppo = ['rock', 'paper', 'scissors']
 oppo_choice=oppo[randint(0,2)]
 if(oppo_choice=='rock'):
 oppo_image.configure(image=rock_image)
 if(user_choice=='paper'):
 turn_result.configure(text="사용자 승!", fg="green")
 compare.configure(text=">>>>>")
 elif(user_choice=='scissors'):
 turn_result.configure(text="컴퓨터 승!", fg="red")
 compare.configure(text="<<<<<")
 else:
 turn_result.configure(text="무승부", fg="gray")
 compare.configure(text="=====")

 elif(oppo_choice=='paper'):
 oppo_image.configure(image=paper_image)
 if(user_choice=='scissors'):
 turn_result.configure(text="사용자 승!", fg="green")
 compare.configure(text=">>>>>")
 elif(user_choice=='rock'):
 turn_result.configure(text="컴퓨터 승!", fg="red")
 compare.configure(text="<<<<<")
 else:
 turn_result.configure(text="무승부", fg="gray")
 compare.configure(text="=====")

 elif(oppo_choice=='scissors'):
 oppo_image.configure(image=scissors_image)
 if(user_choice=='rock'):
 turn_result.configure(text="사용자 승!", fg="green")
 compare.configure(text=">>>>>")
 elif(user_choice=='paper'):
 turn_result.configure(text="컴퓨터 승!", fg="red")
 compare.configure(text="<<<<<")
 else:
 turn_result.configure(text="무승부", fg="gray")
 compare.configure(text="=====")
